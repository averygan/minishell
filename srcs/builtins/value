	if (ft_strncmp(node->expanded_arg[0], "echo", 5) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "cd", 3) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "pwd", 4) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "export", 7) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "unset", 6) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "env", 4) == 0)
	else if (ft_strncmp(node->expanded_arg[0], "exit", 5) == 0)
				ft_pwd(node->minishell);
				ft_env(node->minishell);
			exit(node->minishell->exit_status);
			wait(&(node->minishell->exit_status));
			ft_cd(node->minishell, node);
			ft_export(node->minishell, node);
			ft_unset(node->minishell, node);
			ft_exit(node->minishell);
	while (node->expanded_arg[i])
	if (chdir(node->expanded_arg[1]) == -1)
		return (cd_error(CD_NODIR, node->expanded_arg[1], minishell));
	if (!node->expanded_arg[i])
	while (node->expanded_arg[i])
		remove_quotes(&node->expanded_arg[i]);
		if (ft_strlen(node->expanded_arg[i]) > 0)
			printf("%s", node->expanded_arg[i]);
			if (node->expanded_arg[i + 1])
	if (node->expanded_arg[1] && ft_strncmp(node->expanded_arg[1], "-n", 3) == 0)
		return (node->minishell->exit_status = 0, 0);
	return (node->minishell->exit_status = 0, 0);
	if (!node->expanded_arg[1])
	while (node->expanded_arg[i])
		remove_quotes(&node->expanded_arg[i]);
		var_name = extract_var_name(node->expanded_arg[i]);
		if (check_valid_arg(node->expanded_arg[i], var_name, minishell))
			update_envp(minishell, var_name, node->expanded_arg[i], "export");
	if (!node->expanded_arg[1])
	while (node->expanded_arg[i])
		remove_quotes(&node->expanded_arg[i]);
		var_name = extract_var_name(node->expanded_arg[i]);
		if (check_valid_arg(node->expanded_arg[i], var_name, minishell))
			update_envp(minishell, var_name, node->expanded_arg[i], "unset");
